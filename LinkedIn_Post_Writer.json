{
  "name": "LinkedIn Post Writer",
  "nodes": [
    {
      "parameters": {
        "authentication": "basicAuth",
        "formTitle": "ðŸ“±ðŸ¤– iCogito -  Social Media Content AI Agent",
        "formDescription": "=This is syncbricks AI-driven assistant designed to simplify and accelerate your social media content creation process. This intelligent agent generates engaging and platform-optimized post descriptions based on your inputs, such as a brief topic or title and an uploaded image. Whether you're a marketer, business owner, or influencer, the AI streamlines content creation, saving time and ensuring professional-quality posts tailored to your audience.",
        "formFields": {
          "values": [
            {
              "fieldLabel": "Post Title/Topic",
              "placeholder": "Write a brief and clear title or main topic for the post (e.g., \"New Product Launch,\" \"Exciting Company Update\"). This will help the AI understand the core subject of your post.",
              "requiredField": true
            },
            {
              "fieldLabel": "Optional (Keywords or Hashtags)",
              "placeholder": "Add any specific keywords or hashtags you want the AI to include in the post. This will ensure the generated content aligns with your branding or campaign needs.",
              "requiredField": true
            },
            {
              "fieldLabel": "Optional Link",
              "placeholder": "http:// link of any product, service, formt, support etc"
            }
          ]
        },
        "responseMode": "lastNode",
        "options": {
          "buttonLabel": "Continue to create the post"
        }
      },
      "id": "dff0229c-e765-4efd-8580-aa56a190b4b6",
      "name": "On form submission",
      "type": "n8n-nodes-base.formTrigger",
      "position": [
        120,
        20
      ],
      "webhookId": "syncbricks-social-posting-ai-agent",
      "typeVersion": 2.2,
      "credentials": {
        "httpBasicAuth": {
          "id": "cED25L7JecOuHTNQ",
          "name": "form  credentials"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an AI assistant tasked with creating an engaging LinkedIn post for educators and professionals working in the field of education and EdTech. The goal is to highlight iCogitoâ€™s value as a tool for simplifying teaching experiences.\n\nYour goal is to craft engaging and informative content for LinkedIn ensuring that each post aligns with the platform's audience, tone, and style. The content should reflect iCogito expertise in providing value-driven insights and discussions that resonate with teaching professionals.\n\nRetrieve the Structure Requirements for iCogito's Content Creation using the tool to retrieve LinkedIn post templates and Best Practices - advices to fill the post template. Only modify the 'varible' zone keep the rest unchanged. Also keep all emojis used in the template returned by the tool.\n\nWith this guidance, generate posts for the LinkedIn platform for below given inputs;\n\n#### Event Highlight:\n- Topic / about the post:{{ $json['Post Title/Topic'] }}\n- Language: choose the language matching what is used in the Post Topic \"{{ $json['Post Title/Topic'] }}\"\n- some keywords: {{ $json['keywords'] }}\n- Hashtags: #iCogito #Teaching #Education #Learning #EdTech #InnovationInEducation  #Enseignement #Ã‰ducation #Professeur #TeachingFranÃ§ais #Formation #PÃ©dagogie\n- Visit Link :  : {{ $('On form submission').item.json['Optional Link'] }}\n\nNote that if visit link is blank then provide the link http://icogito.ai, use an appealing sentence to invite the reader to follow the provided link\n",
        "hasOutputParser": true,
        "options": {}
      },
      "id": "64d0026b-8cf7-4d2f-9d03-680d74391bd4",
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        120,
        280
      ],
      "typeVersion": 1.7
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"event_name\": {\n\t\t\t\"type\": \"string\"\n\t\t},\n\t\t\"event_description\": {\n\t\t\t\"type\": \"string\"\n\t\t},\n\t\t\"platform_posts\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"properties\": {\n\t\t\t\t\"LinkedIn\": {\n\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"accroche_hook\": {\n\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t},\n                        \"problem_signs\": {\n                            \"type\": \"string\"\n                        },\n                        \"solution_explanation\": {\n                            \"type\": \"string\"\n                        },\n                        \"result_actions\": {\n                            \"type\": \"string\"\n                        },\n                        \"hashtags\": {\n\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"call_to_action\": {\n\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"additional_notes\": {\n\t\t\t\"type\": \"string\"\n\t\t}\n\t}\n}\n"
      },
      "id": "d5e02df8-89c9-48e1-a20e-7c0e6c1117cb",
      "name": "Structured Output Parser",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "position": [
        420,
        500
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "include": "selected",
        "includeFields": "output.platform_posts.LinkedIn.post",
        "options": {}
      },
      "id": "e9187c6c-03b3-4c48-a041-86a13190db35",
      "name": "Split Form Input",
      "type": "n8n-nodes-base.set",
      "position": [
        400,
        20
      ],
      "typeVersion": 3.2
    },
    {
      "parameters": {
        "include": "selected",
        "includeFields": "output.platform_posts.LinkedIn.post",
        "options": {}
      },
      "id": "f4a9e8ee-5165-42f8-bd14-4ac7d3993531",
      "name": "Split Data",
      "type": "n8n-nodes-base.set",
      "position": [
        640,
        20
      ],
      "typeVersion": 3.2
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5d35062b-5f6d-44ba-bc52-54b0e841c31a",
              "name": "Post Title/Topic",
              "type": "string",
              "value": "={{ $('On form submission').item.json['Post Title/Topic'] }}"
            },
            {
              "id": "400ed7a9-d839-4fe7-b8a0-deb7d89e264a",
              "name": "formMode",
              "type": "string",
              "value": "={{ $('On form submission').item.json.formMode }}"
            },
            {
              "id": "9457b2a1-0625-4be2-a2d2-046048de67a4",
              "name": "keywords",
              "value": "={{ $('On form submission').item.json['Optional (Keywords or Hashtags)'] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "52970cf0-c916-43d5-a9c8-6ab0a074bb31",
      "name": "Data for AI",
      "type": "n8n-nodes-base.set",
      "position": [
        860,
        20
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "943bdca4-1c66-4e48-b558-52019724810f",
      "name": "Aggregate",
      "type": "n8n-nodes-base.aggregate",
      "position": [
        440,
        280
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini-2024-07-18",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini-2024-07-18"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        80,
        500
      ],
      "id": "1d9db302-630e-401c-a8e9-66073481cd9e",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "Y0XTCW9Fwbdi1Vh4",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "name": "get_relevant_linkedin_post_template",
        "description": "Call this tool to retrieve one LinkedIn post template and the advice on how to use it. Use the most relevant template following the \"Post Title/Topic\".",
        "workflowId": {
          "__rl": true,
          "value": "pmTcJ5nWDCPweL6D",
          "mode": "list",
          "cachedResultName": "RAG as microservice"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "chatInput": "=Post Title/Topic: {{ $('Data for AI').item.json['Post Title/Topic'] }}"
          },
          "matchingColumns": [
            "chatInput"
          ],
          "schema": [
            {
              "id": "chatInput",
              "displayName": "chatInput",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        260,
        500
      ],
      "id": "dd451478-1200-40e8-aa4c-ad7081864024",
      "name": "Retrieve Post Template"
    },
    {
      "parameters": {
        "formFields": {
          "values": [
            {
              "fieldLabel": "Go or Nogo",
              "fieldType": "dropdown",
              "fieldOptions": {
                "values": [
                  {
                    "option": "GO"
                  },
                  {
                    "option": "No GO"
                  }
                ]
              }
            }
          ]
        },
        "options": {
          "formTitle": "Review the Text",
          "formDescription": "=Please review the text, I will be Publishing this on Social Media, note that to generate the text I am using tokents.\nNote below Text : \n\nLinkedin : \n{{ $json.data[0].output.event_name }}\n\n{{ $json.data[0].output.event_description }}\n\n{{ $json.data[0].output.platform_posts.LinkedIn.accroche_hook }}\n{{ $json.data[0].output.platform_posts.LinkedIn.problem_signs }}\n{{ $json.data[0].output.platform_posts.LinkedIn.solution_explanation }}\n___\n\n{{ $json.data[0].output.platform_posts.LinkedIn.result_actions }}\n\n{{ $json.data[0].output.platform_posts.LinkedIn.call_to_action }}\n\n{{ $json.data[0].output.platform_posts.LinkedIn.hashtags }}",
          "buttonLabel": "Proceed to Next Step"
        }
      },
      "id": "05ddf9a0-3b6e-439c-b062-a91b2405c21a",
      "name": "Verify Post",
      "type": "n8n-nodes-base.form",
      "position": [
        640,
        280
      ],
      "webhookId": "0dc811ef-b2e0-4213-a0c9-e9b5fb9fcbf1",
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "databasePage",
        "databaseId": {
          "__rl": true,
          "value": "1c0da2a2-b6af-80c4-a596-eaca60a29678",
          "mode": "list",
          "cachedResultName": "LinkedIn posts",
          "cachedResultUrl": "https://www.notion.so/1c0da2a2b6af80c4a596eaca60a29678"
        },
        "title": "={{ $('Aggregate').item.json.data[0].output.event_name }}",
        "propertiesUi": {
          "propertyValues": [
            {
              "key": "Description|rich_text",
              "textContent": "={{ $('Aggregate').item.json.data[0].output.event_description }}"
            },
            {
              "key": "Status|status",
              "statusValue": "=Draft"
            }
          ]
        },
        "blockUi": {
          "blockValues": [
            {
              "type": "heading_1",
              "richText": true,
              "text": {
                "text": [
                  {
                    "text": "={{ $('Aggregate').item.json.data[0].output.event_name }}",
                    "annotationUi": {}
                  }
                ]
              }
            },
            {
              "type": "heading_2",
              "textContent": "={{ $('Aggregate').item.json.data[0].output.platform_posts.LinkedIn.accroche_hook }}"
            },
            {
              "richText": true,
              "text": {
                "text": [
                  {
                    "text": "={{ $('Aggregate').item.json.data[0].output.platform_posts.LinkedIn.problem_signs }}",
                    "annotationUi": {}
                  },
                  {
                    "text": "={{ $('Aggregate').item.json.data[0].output.platform_posts.LinkedIn.solution_explanation }}",
                    "annotationUi": {}
                  },
                  {
                    "text": "={{ $('Aggregate').item.json.data[0].output.platform_posts.LinkedIn.result_actions }}",
                    "annotationUi": {}
                  }
                ]
              }
            },
            {
              "richText": true,
              "text": {
                "text": [
                  {
                    "text": "={{ $('Aggregate').item.json.data[0].output.platform_posts.LinkedIn.call_to_action }}",
                    "annotationUi": {}
                  }
                ]
              }
            },
            {
              "textContent": "={{ $('Aggregate').item.json.data[0].output.platform_posts.LinkedIn.hashtags }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2.2,
      "position": [
        1080,
        200
      ],
      "id": "0df81b02-c005-4848-8165-a8d6d15ab7a1",
      "name": "Notion",
      "credentials": {
        "notionApi": {
          "id": "PD9ERohL5SfNF6k8",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "2bfe068a-03c3-4935-8366-2306bb9a2a3b",
              "leftValue": "={{ $json['Go or Nogo'] }}",
              "rightValue": "GO",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        860,
        280
      ],
      "id": "2a7ba27f-0663-4d61-bdf1-ee0391c9374a",
      "name": "If"
    },
    {
      "parameters": {
        "sendTo": "rondondaniel@gmail.com",
        "subject": "[Success] Write LinkedIn Post Workflow speaking",
        "message": "=Titre : {{ $json.name }}\nDescription : {{ $json.property_description }}",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1300,
        200
      ],
      "id": "95bade35-d6e7-452a-8eaf-748af0517792",
      "name": "Send Success Mail",
      "webhookId": "007b613d-cefa-4000-b226-5c3e9dd7d87f",
      "credentials": {
        "gmailOAuth2": {
          "id": "PR99uT5B4yHf2IuB",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "sendTo": "rondondaniel@gmail.com",
        "subject": "[NO GO] Write LinkedIn",
        "message": "Post not selected to publish",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1080,
        400
      ],
      "id": "efdb2618-379d-4046-9a73-863065c6c885",
      "name": "Send NO GO Mail",
      "webhookId": "0047335a-3d04-4e0f-8bbe-90a56ab68e99",
      "credentials": {
        "gmailOAuth2": {
          "id": "PR99uT5B4yHf2IuB",
          "name": "Gmail account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "On form submission": {
      "main": [
        [
          {
            "node": "Split Form Input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Split Form Input": {
      "main": [
        [
          {
            "node": "Split Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Data": {
      "main": [
        [
          {
            "node": "Data for AI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Data for AI": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Verify Post",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Retrieve Post Template": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Verify Post": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Notion",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send NO GO Mail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Notion": {
      "main": [
        [
          {
            "node": "Send Success Mail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "13e2356c-098c-4233-8991-a5b302690897",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "8d243096d2807c2d1143907a92b7ef76946915bb023736ee030d89a6281d5ca2"
  },
  "id": "dRsS6LHBtF6LEEp9",
  "tags": [
    {
      "createdAt": "2025-03-17T12:01:46.389Z",
      "updatedAt": "2025-03-17T12:01:46.389Z",
      "id": "YPoaJT0PZAiIpmjA",
      "name": "iCogito"
    }
  ]
}